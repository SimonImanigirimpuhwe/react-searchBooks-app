{"version":3,"sources":["components/BookCard/BookCard.js","components/BookList/BookList.js","components/SearchBox/SearchBox.js","components/Scroll/Scroll.js","components/Login/Login.js","components/Register/Register.js","components/Navigation/Navigation.js","container/App.js","components/ErrorBoundary/ErrorBoundry.js","serviceWorker.js","index.js"],"names":["BookCard","title","img","author","page","language","link","className","alt","src","href","BookList","result","length","map","book","key","id","volumeInfo","imageLinks","thumbnail","authors","pageCount","infoLink","SearchBox","handleSubmit","onInputChange","type","placeholder","required","onChange","onClick","Scroll","props","style","overflowY","borderTop","height","children","Login","onEmailChange","e","setState","loginEmail","target","value","onPasswordChange","loginPass","submitForm","preventDefault","fetch","method","headers","body","JSON","stringify","email","state","password","then","response","json","token","onRouteChange","htmlFor","this","Component","Register","onNameChange","registerName","registerEmail","registerPass","handleFormSubmit","name","Navigation","isLoggedIn","display","justifyContent","paddingRight","backgroundParticles","particle","line_linked","shadow","enable","color","blur","number","density","value_area","initialState","input","route","App","displayResult","items","catch","err","console","log","params","ErrorBoundry","hasError","error","info","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"sNAoBeA,G,MAhBE,SAAC,GAAkD,IAAhDC,EAA+C,EAA/CA,MAAOC,EAAwC,EAAxCA,IAAKC,EAAmC,EAAnCA,OAAQC,EAA2B,EAA3BA,KAAMC,EAAqB,EAArBA,SAAUC,EAAW,EAAXA,KAEpD,OACI,yBAAKC,UAAU,aACV,4BACG,4BAAI,4BAAKN,IACT,4BAAI,yBAAKO,IAAI,OAAMC,IAAKP,KACxB,4BAAI,0CAAsBC,GAC1B,4BAAI,yCAAqBC,GACzB,4BAAI,4CAAwBC,GAC5B,4BAAQE,UAAU,OAAM,uBAAGG,KAAMJ,GAAT,kBCgBzBK,EA1BG,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACjB,OAA0B,IAAlBA,EAAOC,OAAiB,6BAC5B,wBAAIN,UAAU,cAAd,yCAEA,yBAAKA,UAAU,aACX,yBAAKA,UAAU,SAEPK,EAAOE,KAAI,SAAAC,GACP,OACA,kBAAC,EAAD,CACIC,IAAKD,EAAKE,GACVhB,MAAOc,EAAKG,WAAWjB,MACvBC,IAAKa,EAAKG,WAAWC,WAAWC,UAChCjB,OAAQY,EAAKG,WAAWG,QACxBjB,KAAMW,EAAKG,WAAWI,UACtBjB,SAAUU,EAAKG,WAAWb,SAC1BC,KAAMS,EAAKG,WAAWK,iBCCnCC,G,MAlBG,SAAC,GAAoC,IAAnCC,EAAkC,EAAlCA,aAAcC,EAAoB,EAApBA,cAC9B,OACI,yBAAKnB,UAAU,SACX,wBAAIA,UAAU,cAAd,oBACA,0BAAMA,UAAU,mBACZ,2BACAoB,KAAK,SACLV,GAAG,SACHW,YAAY,mBACZC,UAAQ,EACRC,SAAUJ,IAEV,4BAAQK,QAASN,GAAjB,cCFDO,EAXA,SAACC,GACZ,OACI,yBACAC,MAAO,CAACC,UAAW,SACnBC,UAAW,kBACXC,OAAO,UACFJ,EAAMK,WCgEJC,G,wDApEX,WAAYN,GAAQ,IAAD,8BACf,cAAMA,IAOVO,cAAgB,SAACC,GACb,EAAKC,SAAS,CAACC,WAAYF,EAAEG,OAAOC,SATrB,EAYnBC,iBAAmB,SAACL,GAChB,EAAKC,SAAS,CAACK,UAAWN,EAAEG,OAAOC,SAbpB,EAgBnBG,WAAa,SAACP,GACVA,EAAEQ,iBAEFC,MADY,gDACD,CACPC,OAAQ,OACRC,QAAS,CACL,eAAe,oBAEnBC,KAAMC,KAAKC,UAAU,CACjBC,MAAO,EAAKC,MAAMd,WAClBe,SAAU,EAAKD,MAAMV,cAG5BY,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAA/C,GACCA,EAAOkD,OACN,EAAK7B,MAAM8B,cAAc,YA9BjC,EAAKN,MAAO,CACRd,WAAY,GACZI,UAAW,IAJA,E,qDAqCV,IAAD,OACJ,OACA,yBAAKxC,UAAU,cACX,8BACI,uCACA,2BAAOyD,QAAQ,SAAf,SACA,2BACArC,KAAK,QACLC,YAAY,mBACZC,UAAQ,EACRC,SAAUmC,KAAKzB,gBACf,2BAAOwB,QAAQ,YAAf,YACA,2BACArC,KAAK,WACLC,YAAY,sBACZC,UAAQ,EACRC,SAAUmC,KAAKnB,mBACf,4BACAnB,KAAK,SACLI,QAASkC,KAAKjB,YAFd,SAGA,iDACA,0BACAjB,QAAS,kBAAM,EAAKE,MAAM8B,cAAc,cADxC,kB,GA3DIG,cC2ELC,G,wDA1EX,WAAYlC,GAAQ,IAAD,8BACf,cAAMA,IAQVmC,aAAe,SAAC3B,GACZ,EAAKC,SAAS,CAAC2B,aAAc5B,EAAEG,OAAOC,SAVvB,EAanBL,cAAgB,SAACC,GACb,EAAKC,SAAS,CAAC4B,cAAe7B,EAAEG,OAAOC,SAdxB,EAiBnBC,iBAAmB,SAACL,GAChB,EAAKC,SAAS,CAAC6B,aAAc9B,EAAEG,OAAOC,SAlBvB,EAqBnB2B,iBAAmB,SAAC/B,GAChBA,EAAEQ,iBAEFC,MADY,mDACD,CACPC,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjBkB,KAAM,EAAKhB,MAAMY,aACjBb,MAAO,EAAKC,MAAMa,cAClBZ,SAAU,EAAKD,MAAMc,iBAG5BZ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAA/C,GACEA,EAAOyC,MACP,EAAKpB,MAAM8B,cAAc,cApCjC,EAAKN,MAAQ,CACTY,aAAc,GACdC,cAAe,GACfC,aAAc,IALH,E,qDA4Cf,OACA,yBAAKhE,UAAU,iBACX,8BACI,uCACA,2BAAOyD,QAAQ,QAAf,QACA,2BACArC,KAAK,OACLC,YAAY,kBACZE,SAAUmC,KAAKG,eACf,2BAAOJ,QAAQ,SAAf,SACA,2BACArC,KAAK,QACLC,YAAY,2BACZC,UAAQ,EACRC,SAAUmC,KAAKzB,gBACf,2BAAOwB,QAAQ,YAAf,YACA,2BACArC,KAAK,WACLC,YAAY,sBACZC,UAAQ,EACRC,SAAUmC,KAAKnB,mBACf,4BACAnB,KAAK,SACLI,QAASkC,KAAKO,kBAFd,kB,GAlEON,cC2BRQ,G,MA3BI,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,WAAYZ,EAAoB,EAApBA,cAC9B,OACMY,EACD,yBAAKpE,UAAU,eACZ,uBACA2B,MACC,CAAC0C,QAAS,OACXC,eAAe,WACfC,aAAc,IACd/C,QAAS,kBAAMgC,EAAc,YAL7B,aAOA,yBAAKxD,UAAU,cAAc2B,MAAO,CAAC0C,QAAS,OAAQC,eAAe,WAAYC,aAAc,KAC/F,uBACA5C,MACC,CAAC4C,aAAc,IAChB/C,QAAS,kBAAMgC,EAAc,YAH7B,SAMA,uBACAhC,QAAS,kBAAMgC,EAAc,cAD7B,e,iBCZNgB,EAAsB,CACxBC,SAAS,CACLC,YAAY,CACRC,OAAO,CACHC,QAAQ,EACRC,MAAM,UACNC,KAAM,IAGdC,OAAO,CACHzC,MAAM,GACN0C,QAAS,CACPJ,QAAQ,EACRK,WAAY,QAMpBC,EAAe,CACb1E,KAAM,GACN2E,MAAO,GACP9E,OAAQ,GACR+D,YAAY,EACZgB,MAAM,UA2DCC,E,kDAvDX,aAAe,IAAD,8BACV,gBAIL7B,cAAgB,SAAC4B,GACA,aAAVA,GAAiC,WAAVA,EACtB,EAAKjD,SAAS+C,GACE,SAAVE,GACN,EAAKjD,SAAS,CAACiC,YAAY,IAE9B,EAAKjC,SAAS,CAACiD,WAXL,EAcfjE,cAAgB,SAACe,GACb,EAAKC,SAAS,CAACgD,MAAOjD,EAAEG,OAAOC,SAfpB,EAkBdgD,cAAgB,SAACjF,GACb,EAAK8B,SAAS,CAAC9B,YAnBL,EAsBda,aAAe,SAACgB,GACZA,EAAEQ,iBACF,IAAMlC,EAAO,EAAK0C,MAAMiC,MACxBxC,MAAM,4DAAD,OAA6DnC,IACjE4C,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAA/C,GACF,EAAKiF,cAAcjF,EAAOkF,UAE7BC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,OA5B5B,EAAKvC,MAAOgC,EAFA,E,qDAmCd,OACI,yBAAKlF,UAAU,OACP,kBAAC,IAAD,CAAUA,UAAU,WACpB4F,OAAQpB,IACR,kBAAC,EAAD,CAAYJ,WAAYV,KAAKR,MAAMkB,WAAYZ,cAAeE,KAAKF,gBAChD,SAArBE,KAAKR,MAAMkC,MACZ,6BACG,kBAAC,EAAD,CAAYjE,cAAeuC,KAAKvC,cAAeD,aAAcwC,KAAKxC,eAClE,kBAAC,EAAD,KACI,kBAAC,EAAD,CAAUb,OAAQqD,KAAKR,MAAM7C,WAEN,WAArBqD,KAAKR,MAAMkC,MAChB,kBAAC,EAAD,CAAO5B,cAAeE,KAAKF,gBAC3B,kBAAC,EAAD,CAAUA,cAAeE,KAAKF,qB,GAjD7BG,aCZHkC,G,yDApBX,WAAYnE,GAAQ,IAAD,8BACf,cAAMA,IACDwB,MAAQ,CACT4C,UAAU,GAHC,E,8DAODC,EAAOC,GACrBtC,KAAKvB,SAAS,CAAC2D,UAAU,M,+BAIzB,OAAGpC,KAAKR,MAAM4C,SACH,wBAAI9F,UAAU,eAAd,oCAEA0D,KAAKhC,MAAMK,a,GAhBH4B,cCSPsC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,KACE,kBAAC,EAAD,QAGJC,SAASC,eAAe,SDsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBzD,MAAK,SAAA0D,GACJA,EAAaC,gBAEdvB,OAAM,SAAAO,GACLL,QAAQK,MAAMA,EAAMiB,a","file":"static/js/main.bb3d9258.chunk.js","sourcesContent":["import React from 'react';\r\nimport './BookCard.css';\r\n\r\n\r\nconst BookCard = ({ title, img, author, page, language, link }) => {\r\n    \r\n    return (\r\n        <div className='book-card'>\r\n             <ul>\r\n                <li><h2>{title}</h2></li>\r\n                <li><img alt='book'src={img}/></li>\r\n                <li><span>Author: </span>{author}</li>\r\n                <li><span>Pages: </span>{page}</li>\r\n                <li><span>Language: </span>{language}</li>\r\n                <button className=\"btn\"><a href={link}>Read More</a></button>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BookCard;","import React from 'react';\r\nimport BookCard from '../BookCard/BookCard';\r\n\r\n\r\nconst BookList  = ({ result }) => {\r\n    return (result.length === 0) ? (<div>\r\n        <h3 className='tex-center'>Please type something in search box!</h3>\r\n    </div>) :(\r\n        <div className='container'>\r\n            <div className='books'>\r\n                {\r\n                    result.map(book => {\r\n                        return (\r\n                        <BookCard  \r\n                            key={book.id} \r\n                            title={book.volumeInfo.title}\r\n                            img={book.volumeInfo.imageLinks.thumbnail}\r\n                            author={book.volumeInfo.authors}\r\n                            page={book.volumeInfo.pageCount}\r\n                            language={book.volumeInfo.language}\r\n                            link={book.volumeInfo.infoLink}\r\n                            />\r\n                            )\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BookList;","import React from 'react';\r\nimport './SearchBox.css';\r\n\r\nconst SearchBox = ({handleSubmit, onInputChange }) => {\r\n    return (\r\n        <div className='title'>\r\n            <h1 className='main-title'>Psychology Books</h1>\r\n            <form className=\"input-container\">\r\n                <input \r\n                type='search' \r\n                id='search' \r\n                placeholder='Search for books' \r\n                required\r\n                onChange={onInputChange}\r\n                />\r\n                <button onClick={handleSubmit}>Search</button>\r\n             </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div \r\n        style={{overflowY :'scroll', \r\n        borderTop: '3px solid black', \r\n        height:'500px'}}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Scroll;","import React, { Component } from 'react';\r\nimport './Login.css';\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state ={\r\n            loginEmail: '',\r\n            loginPass: '',\r\n        };\r\n    }\r\n\r\n    onEmailChange = (e) => {\r\n        this.setState({loginEmail: e.target.value});\r\n    };\r\n\r\n    onPasswordChange = (e) => {\r\n        this.setState({loginPass: e.target.value})\r\n    };\r\n\r\n    submitForm = (e) => {\r\n        e.preventDefault();\r\n        const url = '//https://ps-books-finder.herokuapp.com/login';\r\n        fetch(url, {\r\n            method: 'POST',\r\n            headers: {\r\n                'content-Type':'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                email: this.state.loginEmail,\r\n                password: this.state.loginPass\r\n            })\r\n        })\r\n        .then(response => response.json())\r\n        .then(result => {\r\n            if(result.token) {\r\n                this.props.onRouteChange('home');\r\n            }\r\n        })\r\n    };\r\n\r\n   render() {\r\n        return (\r\n        <div className=\"login-form\">\r\n            <form>\r\n                <h4>Sign In</h4>\r\n                <label htmlFor=\"email\">Email</label>\r\n                <input \r\n                type=\"email\" \r\n                placeholder=\"Enter your email\" \r\n                required \r\n                onChange={this.onEmailChange}/>\r\n                <label htmlFor=\"password\">Password</label>\r\n                <input \r\n                type=\"password\" \r\n                placeholder=\"Enter your password\" \r\n                required \r\n                onChange={this.onPasswordChange}/>\r\n                <button \r\n                type=\"submit\"\r\n                onClick={this.submitForm }>Login</button>\r\n                <p>Don't have account?\r\n                <span \r\n                onClick={() => this.props.onRouteChange('register')}\r\n                >Sign up</span>\r\n                </p>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n}\r\n\r\nexport default Login;","import React, { Component } from 'react';\r\nimport './Register.css';\r\n\r\nclass Register extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            registerName: '',\r\n            registerEmail: '',\r\n            registerPass: ''\r\n        }\r\n    };\r\n\r\n    onNameChange = (e) => {\r\n        this.setState({registerName: e.target.value})\r\n    };\r\n\r\n    onEmailChange = (e) => {\r\n        this.setState({registerEmail: e.target.value})\r\n    };\r\n\r\n    onPasswordChange = (e) => {\r\n        this.setState({registerPass: e.target.value})\r\n    };\r\n\r\n    handleFormSubmit = (e) => {\r\n        e.preventDefault();\r\n        const url = '//https://ps-books-finder.herokuapp.com/register';\r\n        fetch(url, {\r\n            method: 'POST',\r\n            headers: {\r\n                'content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                name: this.state.registerName,\r\n                email: this.state.registerEmail,\r\n                password: this.state.registerPass\r\n            })\r\n        })\r\n        .then(response => response.json())\r\n        .then(result => {\r\n            if (result.body) {\r\n                this.props.onRouteChange('signin')\r\n            }\r\n        })\r\n    };\r\n\r\n    render() {\r\n        return (\r\n        <div className='register-form'>\r\n            <form>\r\n                <h4>Sign Up</h4>\r\n                <label htmlFor=\"name\">Name</label>\r\n                <input \r\n                type='text' \r\n                placeholder='Enter your name'\r\n                onChange={this.onNameChange}/>\r\n                <label htmlFor=\"email\">Email</label>\r\n                <input \r\n                type='email' \r\n                placeholder='Enter your email address'\r\n                required\r\n                onChange={this.onEmailChange}/>\r\n                <label htmlFor=\"password\">Password</label>\r\n                <input \r\n                type='password' \r\n                placeholder='Enter your password' \r\n                required\r\n                onChange={this.onPasswordChange}/>\r\n                <button \r\n                type='submit'\r\n                onClick={this.handleFormSubmit}>Register</button>\r\n            </form>\r\n        </div>\r\n     )\r\n    }\r\n};\r\n\r\nexport default Register;","import React from 'react';\r\nimport './Navigation.css';\r\n\r\nconst Navigation = ({ isLoggedIn, onRouteChange }) => {\r\n    return (\r\n         (isLoggedIn) ? \r\n        (<nav className='credentials'>\r\n            <p \r\n            style=\r\n            {{display: 'flex', \r\n            justifyContent:\"flex-end\", \r\n            paddingRight: 20}}\r\n            onClick={() => onRouteChange('signin')}>Sign Out</p>\r\n        </nav>) : (\r\n            <nav className='credentials' style={{display: 'flex', justifyContent:\"flex-end\", paddingRight: 20}}>\r\n            <p \r\n            style=\r\n            {{paddingRight: 20}}\r\n            onClick={() => onRouteChange('signin')}\r\n            >Login\r\n            </p>\r\n            <p \r\n            onClick={() => onRouteChange('register')}\r\n            >Register\r\n            </p>\r\n            </nav>\r\n        )\r\n    )\r\n}\r\n\r\nexport default Navigation;","import React, { Component } from 'react';\r\nimport BookList from '../components/BookList/BookList';\r\nimport SearchBox from '../components/SearchBox/SearchBox';\r\nimport Scroll from '../components/Scroll/Scroll';\r\nimport Login from '../components/Login/Login';\r\nimport Register from '../components/Register/Register';\r\nimport Navigation from '../components/Navigation/Navigation';\r\nimport Particle from 'react-particles-js';\r\n\r\nconst backgroundParticles = {\r\n    particle:{\r\n        line_linked:{\r\n            shadow:{\r\n                enable: true,\r\n                color:'#3CA9D1',\r\n                blur: 5\r\n            }\r\n        },\r\n        number:{\r\n            value:70,\r\n            density: {\r\n              enable: true,\r\n              value_area: 800\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nconst initialState = {\r\n        book: '',\r\n        input: '',\r\n        result: [],\r\n        isLoggedIn: false,\r\n        route:'signin',\r\n      }\r\n\r\nclass App extends Component{\r\n    constructor() {\r\n        super();\r\n      this.state= initialState;\r\n    }\r\n\r\n   onRouteChange = (route) => {\r\n       if(route === 'register'|| route === 'signin'){\r\n           this.setState(initialState);\r\n       } else if(route === 'home') {\r\n           this.setState({isLoggedIn: true});\r\n       }\r\n        this.setState({route});\r\n   };\r\n\r\n   onInputChange = (e) => {\r\n       this.setState({input: e.target.value})\r\n    };\r\n\r\n    displayResult = (result) => {\r\n        this.setState({result})\r\n    };\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const book = this.state.input;\r\n        fetch(`https://www.googleapis.com/books/v1/volumes?q=psychology/${book}`)\r\n        .then(response => response.json())\r\n        .then(result => {\r\n            this.displayResult(result.items)\r\n        })\r\n        .catch(err => console.log(err))\r\n    };\r\n\r\n   render(){\r\n        \r\n    return (\r\n        <div className='app'>\r\n                <Particle className='particle'\r\n                params={backgroundParticles}/>\r\n                <Navigation isLoggedIn={this.state.isLoggedIn} onRouteChange={this.onRouteChange}/>\r\n            {(this.state.route === 'home') ?\r\n            (<div>\r\n                <SearchBox  onInputChange={this.onInputChange} handleSubmit={this.handleSubmit}/>\r\n                <Scroll>\r\n                    <BookList result={this.state.result}/>\r\n                </Scroll>\r\n            </div>): (this.state.route === 'signin') ?\r\n                (<Login onRouteChange={this.onRouteChange}/>) :\r\n                (<Register onRouteChange={this.onRouteChange}/>)\r\n            }\r\n         </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","import React, { Component } from 'react';\r\nimport './ErrorBoundry.css';\r\n\r\nclass ErrorBoundry extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hasError: false,\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, info) {\r\n        this.setState({hasError: true})\r\n    }\r\n    \r\n    render() {\r\n        if(this.state.hasError){\r\n            return <h1 className='text-center'>Something went wrong, try again!</h1>\r\n        }else{\r\n            return this.props.children\r\n        }\r\n    }\r\n}\r\n\r\nexport default ErrorBoundry;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './container/App';\nimport ErrorBoundry from './components/ErrorBoundary/ErrorBoundry';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ErrorBoundry>\n      <App />\n    </ErrorBoundry>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}